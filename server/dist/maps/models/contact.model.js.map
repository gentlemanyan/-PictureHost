{"version":3,"sources":["../../models/contact.model.ts"],"names":[],"mappings":";;AAAA,uCAA8C;AAC9C,qCAAqC;AAErC,MAAM,aAAa,GAAW,IAAI,iBAAM,CAAC;IACvC,EAAE,EAAE,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;IAClC,MAAM,EAAE;QACN,IAAI,EAAE,MAAM;KACb;IACD,IAAI,EAAE;QACJ,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,kBAAkB;KAC7B;IACD,KAAK,EAAE;QACL,IAAI,EAAE,MAAM;QACZ,MAAM,EAAE,0BAA0B;QAClC,QAAQ,EAAE,mBAAmB;QAC7B,QAAQ,EAAE;YACR;gBACE,SAAS,EAAE,oBAAoB,KAAK;oBAClC,MAAM,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC3C,CAAC;gBACD,GAAG,EAAE,wBAAwB;aAC9B;SACF;KACF;CACF,CAAC,CAAC;AAEU,QAAA,QAAQ,GAAG,gBAAK,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC","file":"../../models/contact.model.js","sourcesContent":["import {Schema, Model, model} from 'mongoose';\nimport * as mongoose from 'mongoose';\n\nconst contactSchema: Schema = new Schema({\n  id: mongoose.Schema.Types.ObjectId,\n  avatar: {\n    type: String,\n  },\n  name: {\n    type: String,\n    required: 'name is required',\n  },\n  phone: {\n    type: String,\n    unique: 'This phone already exist',\n    required: 'phone is required',\n    validate: [\n      {\n        validator: function checkPhone(value) {\n          return /^1(3|4|5|7|8)\\d{9}$/.test(value);\n        },\n        msg: 'Please add valid phone',\n      },\n    ],\n  },\n});\n\nexport const Contacts = model('Contacts', contactSchema);\n"]}